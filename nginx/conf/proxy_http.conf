map $suffix $complete_suffix {
    "" "/";
    default $suffix;
}
map $saved_redirect_location  $extracted_host {
    ~^https?://([^/]+) $1;  
    default "";              
}

map $http_origin $allow_cors {
    "~^https?://([^/]+\.)?fungit\.org"   1;
    "~*" 0;
}

map $domain $allow_domain {
    default 0;
    "~^([^/]+\.)?python\.org$"  1;
}

server {
    location ~ ^/proxy/(?<protocol>https?)://(?<domain>[^/]+)(?<suffix>.*)$ {
        if ($allow_cors = 0) {
            return 403 "CORS Origin Not Allowed";
        }
        if ($allow_domain = 0) {
            return 403 "Proxy to this domain is not allowed";
        }

        # 对于 OPTIONS 方法，直接返回 204 并附上 CORS 头部，不进行代理。
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' "$http_origin" always;
            add_header 'Access-Control-Allow-Methods' 'POST, GET, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always;
            add_header 'Access-Control-Max-Age' 1728000 always;
            add_header 'Content-Length' 0;
            return 204;
        }


        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_ssl_server_name on;
        proxy_intercept_errors on;
        resolver 8.8.8.8;
        add_header 'Access-Control-Allow-Origin' "$http_origin" always;
        set $target_url $protocol://$domain$complete_suffix;
        proxy_pass $target_url;
        error_page 301 302 307 = @handle_redirect;

    }

    location @handle_redirect {
        resolver 8.8.8.8;
        recursive_error_pages on;
        proxy_headers_hash_max_size 512;
        proxy_headers_hash_bucket_size 128;
        proxy_buffer_size 64k;
        proxy_buffers 32 64k;
        proxy_busy_buffers_size 128k;
        set $saved_redirect_location '$upstream_http_location';
        if ($saved_redirect_location ~* "^/") {
            set $saved_redirect_location '$domain$upstream_http_location';
        }
        # debug
        add_header "X-Debug-Redirect-Location" $extracted_host;
`       # fule
        add_header 'Access-Control-Allow-Origin' "$http_origin" always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization';

        proxy_set_header Host $extracted_host;
        proxy_pass $saved_redirect_location;
    }
}
